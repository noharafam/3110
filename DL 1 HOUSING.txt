1.import tensorflow as tf
from tensorflow.keras.datasets import boston_housing
from sklearn import preprocessing
import plotly.graph_objects as go
import matplotlib.pyplot as plt


2.(train_x,train_y),(test_x,test_y)=boston_housing.load_data()

3. print("Train Shape :",train_x.shape)
print("Test Shape :",test_x.shape)
print("Training Sample :",train_x[0])
print("Training Target Sample :",train_y[0])


4.mean=train_x.mean(axis=0)
std=train_x.std(axis=0)

5. train_x=(train_x-mean)/std
test_x=(test_x-mean)/std

6.train_x[0]

7.from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

8.def HousePricePredictionModel():
  model=Sequential()
  model.add(Dense(128,activation='relu',input_shape=(train_x[0].shape),name='dense_1')) #128 Neurons
  model.add(Dense(64,activation='relu',name='dense_2')) #64 Neurons
  model.add(Dense(1,activation='linear',name='dense_output')) #1 Neuron
  model.compile(optimizer='adam', loss='mse', metrics=['mae'])
  model.summary()
  return model

9.model=HousePricePredictionModel()
history=model.fit(x=train_x,y=train_y,epochs=100,batch_size=1,verbose=1,validation_data=(test_x,test_y))

10. test_x[8]

11. test_input=[[-0.39570978, -0.48361547,  2.13815109, -0.25683275,  0.20183093,
       -0.43176465,  0.85606329, -0.81539201, -0.85646254, -1.31131055,
        0.28394328,  0.24795926,  0.71618792]]
print("Actual Output :",test_y[8])
print("Predicted Output :",model.predict(test_input))

12.fig = go.Figure()
fig.add_trace(go.Scattergl(y=history.history['loss'],name='Train'))
fig.add_trace(go.Scattergl(y=history.history['val_loss'],name='Valid'))
fig.update_layout(height=500, width=700,xaxis_title='Epoch',yaxis_title='Loss')
fig.show()